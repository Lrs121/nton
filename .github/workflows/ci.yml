name: ci

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: windows-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10']
        poetry-version: [1.2.2]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install poetry
      uses: abatilo/actions-poetry@v2.1.6
      with:
        poetry-version: ${{ matrix.poetry-version }}
    - name: Install project
      run: |
        poetry install --no-dev
        python -m pip install flake8
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Build project
      run: poetry build
    - name: Cache external Homebrew Tools
      id: cache-hb-tools
      uses: actions/cache@v3
      with:
        path: |
          nstool.exe
          hacbrewpack.exe
          hptnacp.exe
        key: hb-tools
    - name: Install external Homebrew Tools
      if: steps.cache-hb-tools.outputs.cache-hit != 'true'
      run: |
        aria2c https://github.com/jakcron/nstool/releases/download/v1.6.5/nstool-v1.6.5-win_x64.zip
        7z x nstool-v1.6.5-win_x64.zip nstool.exe
        aria2c https://github.com/The-4n/hacBrewPack/releases/download/v3.05/hacbrewpack-v3.05_win64.zip
        7z x hacbrewpack-v3.05_win64.zip hacbrewpack.exe
        aria2c https://github.com/The-4n/hacPack/releases/download/v1.36-r2/hacpack-v1.36_r2_win64.zip
        7z x hacpack-v1.36_r2_win64.zip Tools/hacPackTools-NACP/hptnacp.exe
        Move-Item -Path .\Tools\hacPackTools-NACP\hptnacp.exe -Destination .
    - name: Cache prod.keys
      id: cache-prod-keys
      uses: actions/cache@v3
      with:
        path: prod.keys
        key: prod-keys
    - name: Save prod.keys safely
      if: steps.cache-prod-keys.outputs.cache-hit != 'true'
      env:
        PROD_KEYS: ${{ secrets.PROD_KEYS }}
      run: $env:PROD_KEYS | Out-File prod.keys
    - name: Build basic NSP forwarder
      run: poetry run nton build "sdl-hello.nro" --name "Hello World" --publisher "vgmoose" --version "1.1" --sdmc "/switch/sdl-hello.nro"
